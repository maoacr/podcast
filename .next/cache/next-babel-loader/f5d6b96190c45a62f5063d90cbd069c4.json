{"ast":null,"code":"var _jsxFileName = \"/Users/iMac/projects/podcast/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport Error from 'next/error';\nexport default class extends React.Component {\n  static async getInitialProps() {\n    try {\n      let req = await fetch('https://api.audioboom.com/channels/recommended');\n      let {\n        body: channels\n      } = await req.json();\n      return {\n        channels,\n        statusCode: 200\n      };\n    } catch (e) {\n      return {\n        channels: null,\n        statusCode: 503\n      };\n    }\n  }\n\n  render() {\n    const {\n      channels,\n      statusCode\n    } = this.props;\n\n    if (statusCode !== 200) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 14\n        }\n      }, \" Se rompio el servidor \");\n    }\n\n    return __jsx(Layout, {\n      title: \"App de Podcasts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    }, __jsx(ChannelGrid, {\n      channels: channels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/iMac/projects/podcast/pages/index.js"],"names":["Layout","ChannelGrid","Error","React","Component","getInitialProps","req","fetch","body","channels","json","statusCode","e","render","props"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,eAAe,cAAcC,KAAK,CAACC,SAApB,CAA8B;AAE3C,eAAaC,eAAb,GAA+B;AAC5B,QAAI;AACH,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,gDAAD,CAArB;AACA,UAAI;AAAEC,QAAAA,IAAI,EAAEC;AAAR,UAAqB,MAAMH,GAAG,CAACI,IAAJ,EAA/B;AACA,aAAO;AAAED,QAAAA,QAAF;AAAYE,QAAAA,UAAU,EAAE;AAAxB,OAAP;AACD,KAJA,CAIC,OAAMC,CAAN,EAAS;AACT,aAAO;AAAEH,QAAAA,QAAQ,EAAE,IAAZ;AAAkBE,QAAAA,UAAU,EAAE;AAA9B,OAAP;AACD;AAEF;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,QAA2B,KAAKG,KAAtC;;AAEA,QAAGH,UAAU,KAAK,GAAlB,EAAuB;AACrB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAP;AACD;;AAGD,WAAO,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,MAAC,WAAD;AAAa,MAAA,QAAQ,EAAGF,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAP;AAGD;;AAxB0C","sourcesContent":["import 'isomorphic-fetch'\nimport Layout from '../components/Layout'\nimport ChannelGrid from '../components/ChannelGrid'\nimport Error from 'next/error'\n\nexport default class extends React.Component {\n\n  static async getInitialProps() {\n     try {\n      let req = await fetch('https://api.audioboom.com/channels/recommended')\n      let { body: channels } = await req.json()\n      return { channels, statusCode: 200 }\n    } catch(e) {\n      return { channels: null, statusCode: 503 }\n    }\n   \n  }\n\n  render() {\n    const { channels, statusCode } = this.props\n\n    if(statusCode !== 200) {\n      return <div> Se rompio el servidor </div>\n    }\n\n\n    return <Layout title=\"App de Podcasts\">\n      <ChannelGrid channels={ channels } />\n    </Layout>\n  }\n  \n}"]},"metadata":{},"sourceType":"module"}