{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/iMac/projects/podcast/components/ChannelGrid.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Link from 'next/link';\n\nvar ChannelGrid = /*#__PURE__*/function (_React$Component) {\n  _inherits(ChannelGrid, _React$Component);\n\n  var _super = _createSuper(ChannelGrid);\n\n  function ChannelGrid() {\n    _classCallCheck(this, ChannelGrid);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ChannelGrid, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var channels = this.props.channels;\n      return __jsx(\"div\", {\n        className: \"jsx-717556532\" + \" \" + \"channels\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 12\n        }\n      }, channels.map(function (channel) {\n        return __jsx(Link, {\n          href: \"/channel?id=\".concat(channel.id),\n          prefetch: true,\n          key: channel.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 9\n          }\n        }, __jsx(\"a\", {\n          className: \"jsx-717556532\" + \" \" + \"channel\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 11\n          }\n        }, __jsx(\"img\", {\n          src: channel.urls.logo_image.original,\n          alt: \"\",\n          className: \"jsx-717556532\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }\n        }), __jsx(\"h2\", {\n          className: \"jsx-717556532\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }\n        }, channel.title)));\n      }), __jsx(_JSXStyle, {\n        id: \"717556532\",\n        __self: this\n      }, \".channels.jsx-717556532{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}.channel.jsx-717556532{display:block;margin-bottom:0.5em;color:#333;-webkit-text-decoration:none;text-decoration:none;}.channel.jsx-717556532 img.jsx-717556532{border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);width:100%;}h2.jsx-717556532{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pTWFjL3Byb2plY3RzL3BvZGNhc3QvY29tcG9uZW50cy9DaGFubmVsR3JpZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnQmtCLEFBR3dCLEFBTUMsQUFNSSxBQUtOLFlBQ0ksQ0FqQkYsQ0FNTSxJQU1vQixTQVgzQixDQWlCRyxNQVhMLE1BTGlELElBaUJuRCxDQVhZLFFBWUgsS0FQUCxXQUNiLEVBT0Esd0JBWkEsR0FOQSIsImZpbGUiOiIvVXNlcnMvaU1hYy9wcm9qZWN0cy9wb2RjYXN0L2NvbXBvbmVudHMvQ2hhbm5lbEdyaWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENoYW5uZWxHcmlkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgY2hhbm5lbHMgfSA9IHRoaXMucHJvcHNcblxuICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImNoYW5uZWxzXCI+XG4gICAgICB7IGNoYW5uZWxzLm1hcCgoY2hhbm5lbCkgPT4gKFxuICAgICAgICA8TGluayBocmVmPXtgL2NoYW5uZWw/aWQ9JHsgY2hhbm5lbC5pZCB9YH0gcHJlZmV0Y2gga2V5PXtjaGFubmVsLmlkfT5cbiAgICAgICAgICA8YSBjbGFzc05hbWU9XCJjaGFubmVsXCI+XG4gICAgICAgICAgICA8aW1nIHNyYz17IGNoYW5uZWwudXJscy5sb2dvX2ltYWdlLm9yaWdpbmFsIH0gYWx0PVwiXCIvPlxuICAgICAgICAgICAgPGgyPnsgY2hhbm5lbC50aXRsZSB9PC9oMj5cbiAgICAgICAgICA8L2E+XG4gICAgICAgIDwvTGluaz5cbiAgICAgICkpIH1cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAuY2hhbm5lbHMge1xuICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgZ3JpZC1nYXA6IDE1cHg7XG4gICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgxNjBweCwgMWZyKSk7XG4gICAgICAgIH1cbiAgICAgICAgLmNoYW5uZWwge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuICAgICAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgfVxuICAgICAgICAuY2hhbm5lbCBpbWcge1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgICBib3gtc2hhZG93OiAwcHggMnB4IDZweCByZ2JhKDAsMCwwLDAuMTUpO1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG4gICAgICAgIGgyIHtcbiAgICAgICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICAgICAgZm9udC1zaXplOiAwLjllbTtcbiAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgfVxufSJdfQ== */\\n/*@ sourceURL=/Users/iMac/projects/podcast/components/ChannelGrid.js */\"));\n    }\n  }]);\n\n  return ChannelGrid;\n}(React.Component);\n\nexport { ChannelGrid as default };","map":{"version":3,"sources":["/Users/iMac/projects/podcast/components/ChannelGrid.js"],"names":["Link","ChannelGrid","channels","props","map","channel","id","urls","logo_image","original","title","React","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;;IAEqBC,W;;;;;;;;;;;;;6BACV;AAAA;;AAAA,UACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAGP,aAAO;AAAA,2CAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACHA,QAAQ,CAACE,GAAT,CAAa,UAACC,OAAD;AAAA,eACb,MAAC,IAAD;AAAM,UAAA,IAAI,wBAAkBA,OAAO,CAACC,EAA1B,CAAV;AAA2C,UAAA,QAAQ,MAAnD;AAAoD,UAAA,GAAG,EAAED,OAAO,CAACC,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA,6CAAa,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAGD,OAAO,CAACE,IAAR,CAAaC,UAAb,CAAwBC,QAAnC;AAA8C,UAAA,GAAG,EAAC,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMJ,OAAO,CAACK,KAAd,CAFF,CADF,CADa;AAAA,OAAb,CADG;AAAA;AAAA;AAAA,qiFAAP;AAqCD;;;;EAzCsCC,KAAK,CAACC,S;;SAA1BX,W","sourcesContent":["import Link from 'next/link'\n\nexport default class ChannelGrid extends React.Component {\n  render() {\n    const { channels } = this.props\n\n    return <div className=\"channels\">\n      { channels.map((channel) => (\n        <Link href={`/channel?id=${ channel.id }`} prefetch key={channel.id}>\n          <a className=\"channel\">\n            <img src={ channel.urls.logo_image.original } alt=\"\"/>\n            <h2>{ channel.title }</h2>\n          </a>\n        </Link>\n      )) }\n\n      <style jsx>{`\n        .channels {\n          display: grid;\n          grid-gap: 15px;\n          padding: 15px;\n          grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n        }\n        .channel {\n          display: block;\n          margin-bottom: 0.5em;\n          color: #333;\n          text-decoration: none;\n        }\n        .channel img {\n          border-radius: 3px;\n          box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\n          width: 100%;\n        }\n        h2 {\n          padding: 5px;\n          font-size: 0.9em;\n          font-weight: 600;\n          margin: 0;\n          text-align: center;\n        }\n      `}</style>\n    </div>\n  }\n}"]},"metadata":{},"sourceType":"module"}