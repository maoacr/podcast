{"ast":null,"code":"var _jsxFileName = \"/Users/iMac/projects/podcast/components/PodcastList.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nexport default class extends React.Component {\n  render() {\n    const {\n      podcasts\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"jsx-3605175331\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 12\n      }\n    }, podcasts.map(podcast => __jsx(Link, {\n      href: `/podcast?id=${podcast.id}`,\n      prefetch: true,\n      key: podcast.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-3605175331\" + \" \" + 'podcast',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }\n    }, __jsx(\"h3\", {\n      className: \"jsx-3605175331\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, podcast.title), __jsx(\"div\", {\n      className: \"jsx-3605175331\" + \" \" + 'meta',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, Math.ceil(podcast.duration / 60), \" minutes\")))), __jsx(_JSXStyle, {\n      id: \"3605175331\",\n      __self: this\n    }, \".podcast.jsx-3605175331{display:block;-webkit-text-decoration:none;text-decoration:none;color:#333;padding:15px;border-bottom:1px solid rgba(0,0,0,0.2);cursor:pointer;}.podcast.jsx-3605175331:hover{color:#000;}.podcast.jsx-3605175331 h3.jsx-3605175331{margin:0;}.podcast.jsx-3605175331 .meta.jsx-3605175331{color:#666;margin-top:0.5em;font-size:0.8em;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pTWFjL3Byb2plY3RzL3BvZGNhc3QvY29tcG9uZW50cy9Qb2RjYXN0TGlzdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQmtCLEFBR3lCLEFBUUgsQUFHRixBQUdFLFNBRmIsRUFIQSxBQU1tQixHQWRJLGNBZUwsZ0JBQ2xCLG9CQWZhLFdBQ0UsYUFDMkIsd0NBQ3pCLGVBQ2pCIiwiZmlsZSI6Ii9Vc2Vycy9pTWFjL3Byb2plY3RzL3BvZGNhc3QvY29tcG9uZW50cy9Qb2RjYXN0TGlzdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluaydcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBwb2RjYXN0cyB9ID0gdGhpcy5wcm9wc1xuXG4gICAgcmV0dXJuIDxkaXY+XG4gICAgICB7IHBvZGNhc3RzLm1hcCgocG9kY2FzdCkgPT4gKFxuICAgICAgICA8TGluayBocmVmPXtgL3BvZGNhc3Q/aWQ9JHtwb2RjYXN0LmlkfWB9IHByZWZldGNoIGtleT17cG9kY2FzdC5pZH0+XG4gICAgICAgICAgPGEgY2xhc3NOYW1lPSdwb2RjYXN0Jz5cbiAgICAgICAgICAgIDxoMz57IHBvZGNhc3QudGl0bGUgfTwvaDM+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbWV0YSc+XG4gICAgICAgICAgICAgIHsgTWF0aC5jZWlsKHBvZGNhc3QuZHVyYXRpb24gLyA2MCkgfSBtaW51dGVzXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2E+XG4gICAgICAgIDwvTGluaz5cbiAgICAgICkpIH1cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAucG9kY2FzdCB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4yKTtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIH1cbiAgICAgICAgLnBvZGNhc3Q6aG92ZXIge1xuICAgICAgICAgIGNvbG9yOiAjMDAwO1xuICAgICAgICB9XG4gICAgICAgIC5wb2RjYXN0IGgzIHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cbiAgICAgICAgLnBvZGNhc3QgLm1ldGEge1xuICAgICAgICAgIGNvbG9yOiAjNjY2O1xuICAgICAgICAgIG1hcmdpbi10b3A6IDAuNWVtO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMC44ZW07XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgfVxufSJdfQ== */\\n/*@ sourceURL=/Users/iMac/projects/podcast/components/PodcastList.js */\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/iMac/projects/podcast/components/PodcastList.js"],"names":["Link","React","Component","render","podcasts","props","map","podcast","id","title","Math","ceil","duration"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,eAAe,cAAcC,KAAK,CAACC,SAApB,CAA8B;AAC3CC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AAEA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACHD,QAAQ,CAACE,GAAT,CAAcC,OAAD,IACb,MAAC,IAAD;AAAM,MAAA,IAAI,EAAG,eAAcA,OAAO,CAACC,EAAG,EAAtC;AAAyC,MAAA,QAAQ,MAAjD;AAAkD,MAAA,GAAG,EAAED,OAAO,CAACC,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA,0CAAa,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,OAAO,CAACE,KAAd,CADF,EAEE;AAAA,0CAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIC,IAAI,CAACC,IAAL,CAAUJ,OAAO,CAACK,QAAR,GAAmB,EAA7B,CADJ,aAFF,CADF,CADA,CADG;AAAA;AAAA;AAAA,qsEAAP;AAkCD;;AAtC0C","sourcesContent":["import Link from 'next/link'\n\nexport default class extends React.Component {\n  render() {\n    const { podcasts } = this.props\n\n    return <div>\n      { podcasts.map((podcast) => (\n        <Link href={`/podcast?id=${podcast.id}`} prefetch key={podcast.id}>\n          <a className='podcast'>\n            <h3>{ podcast.title }</h3>\n            <div className='meta'>\n              { Math.ceil(podcast.duration / 60) } minutes\n            </div>\n          </a>\n        </Link>\n      )) }\n\n      <style jsx>{`\n        .podcast {\n          display: block;\n          text-decoration: none;\n          color: #333;\n          padding: 15px;\n          border-bottom: 1px solid rgba(0,0,0,0.2);\n          cursor: pointer;\n        }\n        .podcast:hover {\n          color: #000;\n        }\n        .podcast h3 {\n          margin: 0;\n        }\n        .podcast .meta {\n          color: #666;\n          margin-top: 0.5em;\n          font-size: 0.8em;\n        }\n      `}</style>\n    </div>\n  }\n}"]},"metadata":{},"sourceType":"module"}